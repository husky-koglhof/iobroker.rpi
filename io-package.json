{
    "common": {
        "name":                     "rpi2",
        "title":                    "RPI-Monitor",
        "desc":                     {
			"en": "RPI-Monitor for ioBroker Installations",
			"de": "RPI-Monitor für ioBroker",
			"ru": "RPI-Монитор для ioBroker"
		},
        "version":                  "0.3.2",
        "news": {
            "0.3.2": {
                "en": "fixed Mem available readings on Stretch",
                "de": "mem available bei strech gefixt",
                "ru": "fixed Mem available readings on Stretch"
            },
			"0.3.1": {
                "en": "Fixup swap_used calculation.",
                "de": "Korrigiere swap_used Kalkulation",
                "ru": "Исправлено вычисление swap_used"
            },
            "0.3.0": {
                "en": "Add GPIO direction indication",
                "de": "GPIO Richtung States hinzugefügt",
                "ru": "Добавлены состояния для индикации направления GPIO"
            },
            "0.2.2": {
                "en": "Use BCM enumeration",
                "de": "Benutze BCM Numerierung",
                "ru": "Используется BCM нумерация"
            },
            "0.2.1": {
                "en": "fix start of adapter",
                "de": "Korrigiert Adapterstart",
                "ru": "Исправлен старт драйвера"
            },
            "0.2.0": {
                "en": "implement GPIOs control",
                "de": "Implementiert die Steuerung von GPIOs",
                "ru": "Добавлено управление GPIOs"
            }
        },
        "mode":                     "daemon",
        "platform":                 "javascript/Node.js",
        "os":                       ["linux"],
        "loglevel":                 "info",
        "keywords":                 ["ioBroker", "monitoring", "raspberry", "orangepi", "odroid", "bananapi", "gpio"],
        "main":                     "main.js",
        "authors": [
            "Christian Baumgartner", "husky-koglhof <husky.koglhof@icloud.com>"
        ],
        "license":                  "MIT",
        "singletonHost":             true,
        "readme":                   "https://github.com/ioBroker/ioBroker.rpi2/blob/master/README.md",
        "icon":                     "rpi.png",
        "type":                     "hardware",
	    "enabled":					true,
        "config":{
            "minWidth":   650,
            "width":      700,
            "minHeight":  600,
            "height":     600
        },
        "extIcon":                  "https://raw.githubusercontent.com/ioBroker/ioBroker.rpi2/master/admin/rpi.png"
    },
    "native": {
        "c_cpu": true,
        "c_raspberry": false,
        "c_memory": true,
        "c_network": true,
        "c_sdcard": true,
        "c_swap": true,
        "c_temperature": true,
        "c_uptime": true,
        "c_wlan": true,
        "interval": 60000,
        "cpu": {
            "cpu_frequency": {
                "command": "cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq",
                "regexp": "(.*)",
                "post": "$1/1000"
            },
            "load1,load5,load15": {
                "command": "cat /proc/loadavg",
                "regexp": "^(\\S+)\\s(\\S+)\\s(\\S+)",
                "post": ""
            },
            "scaling_governor": {
                "command": "cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor",
                "regexp": "(.*)",
                "post": ""
            }
        },
        "raspberry": {
            "cpu_voltage": {
                "command": "vcgencmd measure_volts core",
                "regexp": "(\\d+.\\d+)V",
                "post": ""
            },
            "mem_arm": {
                "command": "vcgencmd get_mem arm",
                "regexp": "(\\d+)",
                "post": ""
            },
            "mem_gpu": {
                "command": "vcgencmd get_mem gpu",
                "regexp": "(\\d+)",
                "post": ""
            }
        },
        "memory": {
            "memory_total": {
                "command": "cat /proc/meminfo",
                "regexp": "MemTotal:\\s+(\\d+)",
                "post": "$1/1024"
            },
            "memory_free": {
                "command": "cat /proc/meminfo",
                "regexp": "MemFree:\\s+(\\d+)",
                "post": "$1/1024"
            },
            "memory_available": {
                "command": "cat /proc/meminfo",
                "regexp": "MemAvailable:\\s+(\\d+)",
                "post": "$1/1024",
                "multiline": true
            }
        },
        "network": {
            "net_received": {
                "command": "cat /sys/class/net/eth0/statistics/rx_bytes",
                "regexp": "(.*)",
                "post": "$1*-1"
            },
            "net_send": {
                "command": "cat /sys/class/net/eth0/statistics/tx_bytes",
                "regexp": "(.*)",
                "post": ""
            }
        },
        "sdcard": {
            "sdcard_root_total": {
                "command": "df /",
                "regexp": "\\S+\\s+(\\d+).*\\/$",
                "post": "$1/1024",
                "multiline": true
            },
            "sdcard_boot_total": {
                "command": "df /boot",
                "regexp": "\\S+\\s+(\\d+).*\\/boot$",
                "post": "$1/1024",
                "multiline": true
            },
            "sdcard_root_used": {
                "command": "df /",
                "regexp": "\\S+\\s+\\d+\\s+(\\d+).*\\/$",
                "post": "$1/1024",
                "multiline": true
            },
            "sdcard_boot_used": {
                "command": "df /boot",
                "regexp": "\\S+\\s+\\d+\\s+(\\d+).*\\/boot$",
                "post": "$1/1024",
                "multiline": true
            }
        },
        "swap": {
            "swap_total": {
                "command": "cat /proc/meminfo",
                "regexp": "SwapTotal:\\s+(\\d+)",
                "post": "$1/1024",
                "multiline": true
            },
            "swap_used": {
                "command": "cat /proc/meminfo",
                "regexp": "SwapFree:\\s+(\\d+)",
                "post": "(rpi.swap_total - $1)/1024",
                "multiline": true
            }
        },
        "temperature": {
            "soc_temp": {
                "command": "cat /sys/devices/virtual/thermal/thermal_zone0/temp",
                "regexp": "(.*)",
                "post": "$1/1000"
            }
        },
        "uptime": {
            "uptime": {
                "command": "cat /proc/uptime",
                "regexp": "(^\\S+)",
                "post": ""
            }
        },
        "wlan": {
            "wifi_received": {
                "command": "cat /sys/class/net/wlan0/statistics/rx_bytes",
                "regexp": "(.*)",
                "post": "$1*-1"
            },
            "wifi_send": {
                "command": "cat /sys/class/net/wlan0/statistics/tx_bytes",
                "regexp": "(.*)",
                "post": ""
            }
        },
        "gpios": [

        ]
    },
    "objects": [
    ],
    "instanceObjects": [
    ]
}
